#!/bin/bash

function usage() {
cat <<HELP
    usage: gtf_to_bed input.gtf > output.bed
    Converts a GTF annotation file to BED12.
    
HELP
}

while [ "$1" != "" ]; do
    case $1 in
    -h | --help ) usage; exit 1;;
    * )           GTF=$1; break;;
    esac
    shift
done

if [ -z $GTF ]; then
    echo "ERROR: No GTF file found."
    usage
    exit 1
fi

cat $GTF | # Print all lines of GTF file to stdout
sed 's/\t\([\+-]\)\t\.\t.*transcript_id \"\([^\"]\+\)\";\?.*$/\t\1\t.\t\2/' | # Simplify attribute line to only the transcript ID
grep -P '\texon\t' | # Subset GTF file for only 'exon' lines
awk '{ print $1"\t"$4-1"\t"$5"\t"$9"\t"$6"\t"$7 }' | # Convert GTF lines to BED
awk '{ # Convert BED to BED12
  if (name==$4){
    blockCount+=1
    if ($2>start){
      blockSizes=blockSizes","$3-$2
      blockStarts=blockStarts","$2
      end=$3
    }else{
      blockSizes=$3-$2","blockSizes
      blockStarts=$2","blockStarts
      start=$2
    }
  }else{
    if(name!=""){
      NB=split(blockStarts, relativeStarts, ",")
      blockStarts="0"
      for (i = 1; i <= NB; i++){
        if(relativeStarts[i]-start==0){
          blockStarts=relativeStarts[i]-start
        }else{
          blockStarts=blockStarts","relativeStarts[i]-start
        }
      }
      print $1"\t"start"\t"end"\t"name"\t.\t"strand"\t"start"\t"end"\t0,0,0\t"blockCount"\t"blockSizes"\t"blockStarts
    }
    name=$4
    start=$2
    end=$3
    blockCount=1
    blockSizes=$3-$2
    blockStarts=$2
    strand=$6
  }} END {
    NB=split(blockStarts, relativeStarts, ",")
    blockStarts="0"
    for (i = 1; i <= NB; i++){
      if(relativeStarts[i]-start==0){
        blockStarts=relativeStarts[i]-start
      }else{
        blockStarts=blockStarts","relativeStarts[i]-start
      }
    }
    print $1"\t"start"\t"end"\t"name"\t.\t"strand"\t"start"\t"end"\t0,0,0\t"blockCount"\t"blockSizes"\t"blockStarts
}'
