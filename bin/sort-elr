#!/bin/bash

CPUS=1
RAM=8
TEMP="."

function usage() {
cat <<HELP
    usage: elr_sort [options] unsorted.elr > sorted.elr
    Sorts a single End-Labeled Read (ELR) file so that all reads
    are in ascending (left,right) order.

    Options:
    --ram   Amount of available RAM in gigabytes (default: 8)
    --cpus  Number of cores available (default: 1)
    -T      Path to write temporary files (default: '.')

HELP
}

while [ "$1" != "" ]; do
    case $1 in
    -h | --help )               usage; exit 1;;
    --cpus )                    shift; CPUS=$1;;
    --ram )                     shift; RAM=$1;;
    -T )                        shift; TEMP=$1;;
    * )                         ELRFILE=$1; break;;
    esac
    shift
done

if [ -z $ELRFILE ]; then
    echo "ERROR: No ELR file found."
    usage
    exit 1
fi

grep -P '^#' $ELRFILE | sort -k1,1 -k2,2n
sort -T $TEMP -S "$RAM"G --parallel=$CPUS -k1,1n -k2,2n -k3,3n -k4,4r -k5,5 -k6,6n -k7,7nr $ELRFILE | grep -P -v '^#'
